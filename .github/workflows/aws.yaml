name: main branch CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:

  deploy:
    runs-on: ubuntu-latest
    env:
      DB_USERS: ${{ secrets.DB_USERS }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      HOST_LOCAL: ${{ secrets.HOST_LOCAL }}
      HOST_CONTAINER: ${{ secrets.HOST_CONTAINER}}
      USER_LOCAL: ${{ secrets.USER_LOCAL}}
      USER_CONTAINER: ${{ secrets.USER_CONTAINER}}
      PASSWORD_LOCAL: ${{ secrets.PASSWORD_LOCAL}}
      PASSWORD_CONTAINER: ${{ secrets.PASSWORD_CONTAINER}}
      DB_LOCAL: ${{ secrets.DB_LOCAL}}
      DB_CONTAINER: ${{ secrets.DB_LOCAL}}
      PORT_LOCAL: ${{ secrets.PORT}}
      PORT_CONTAINER: ${{ secrets.PORT}}
      envBackPath: "./MSPR-BDD-B3-Backend/back/src/.env"

    steps:
    - name : Environnements Variables
      uses:  actions/checkout@v2
      run: |
             echo "SECRET=$SECRET" > $envBackPath
             echo "ALGORITHM=$ALGORITHM" >> $envBackPath
             echo "HOST_LOCAL=$HOST_LOCAL" >> $envBackPath
             echo "HOST_CONTAINER=$HOST_CONTAINER" >> $envBackPath
             echo "USER_LOCAL=$USER_LOCAL" >> $envBackPath
             echo "USER_CONTAINER=$USER_CONTAINER" >> $envBackPath
             echo "PASSWORD_LOCAL=$PASSWORD_LOCAL" >> $envBackPath
             echo "PASSWORD_CONTAINER=$PASSWORD_CONTAINER" >> $envBackPath
             echo "DB_LOCAL=$DB_LOCAL" >> $envBackPath
             echo "DB_CONTAINER=$DB_CONTAINER" >> $envBackPath
             echo "PORT_LOCAL=$PORT_LOCAL" >> $envBackPath
             echo "PORT_CONTAINER=$PORT_CONTAINER" >> $envBackPath
   
    - name: Deploy to Server via SSH action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USER }}
        key: ${{ secrets.SSH_PEM }}
        port: 22 
        script: |
          # Stop all running Docker Containers
          # if [ "$(docker ps -a -q)" ]; then
          #   docker kill $(docker ps -a -q)
          #   docker rm $(docker ps -a -q)
          # fi
          cd MSPR-BDD-B3/
          git pull
          sudo docker compose up -d --build
      
          