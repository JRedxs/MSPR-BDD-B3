name: selenium testing docker-compose

on:
  push:
    branches:
      - selenium
  pull_request:
    branches:
      - selenium

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: selenium

    - name: Creating the test environment files
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        ALGORITHM: ${{ secrets.ALGORITHM }}

        HOST_LOCAL: ${{ secrets.HOST_LOCAL }}
        HOST_CONTAINER: ${{ secrets.HOST_CONTAINER}}
        USER_LOCAL: ${{ secrets.USER_LOCAL}}
        USER_CONTAINER: ${{ secrets.USER_CONTAINER}}
        PASSWORD_LOCAL: ${{ secrets.PASSWORD_LOCAL}}
        PASSWORD_CONTAINER: ${{ secrets.PASSWORD_CONTAINER}}
        DB_LOCAL: ${{ secrets.DB_LOCAL}}
        DB_CONTAINER: ${{ secrets.DB_LOCAL}}
        PORT_LOCAL: ${{ secrets.PORT}}
        PORT_CONTAINER: ${{ secrets.PORT}}

        REACT_APP_API_URL: "http://localhost:8005"

        envBackPath: "./MSPR-BDD-B3-Backend/back/src/.env"
        envTestPath: "./MSPR-BDD-B3-Tests/.env"
        envWebPath: "./MSPR-BDD-B3-WebApp/front/.env.local"
        envDockerCompose: "./.env"

      run: |
        # echo "SECRET=$SECRET" > $envBackPath
        # echo "ALGORITHM=$ALGORITHM" >> $envBackPath
        # echo "HOST_LOCAL=$HOST_LOCAL" >> $envBackPath
        # echo "HOST_CONTAINER=$HOST_CONTAINER" >> $envBackPath
        # echo "USER_LOCAL=$USER_LOCAL" >> $envBackPath
        # echo "USER_CONTAINER=$USER_CONTAINER" >> $envBackPath
        # echo "PASSWORD_LOCAL=$PASSWORD_LOCAL" >> $envBackPath
        # echo "PASSWORD_CONTAINER=$PASSWORD_CONTAINER" >> $envBackPath
        # echo "DB_LOCAL=$DB_LOCAL" >> $envBackPath
        # echo "DB_CONTAINER=$DB_CONTAINER" >> $envBackPath
        # echo "PORT_LOCAL=$PORT_LOCAL" >> $envBackPath
        # echo "PORT_CONTAINER=$PORT_CONTAINER" >> $envBackPath

        # cat $envBackPath
        # echo "-----------------------------------------------------------------------------------------------------------"
        # echo "-----------------------------------------------------------------------------------------------------------"

        # echo "SECRET=$SECRET" > $envTestPath
        # echo "ALGORITHM=$ALGORITHM" >> $envTestPath
        # echo "HOST_LOCAL=$HOST_LOCAL" >> $envTestPath
        # echo "HOST_CONTAINER=$HOST_CONTAINER" >> $envTestPath
        # echo "USER_LOCAL=$USER_LOCAL" >> $envTestPath
        # echo "USER_CONTAINER=$USER_CONTAINER" >> $envTestPath
        # echo "PASSWORD_LOCAL=$PASSWORD_LOCAL" >> $envTestPath
        # echo "PASSWORD_CONTAINER=$PASSWORD_CONTAINER" >> $envTestPath
        # echo "DB_LOCAL=$DB_LOCAL" >> $envTestPath
        # echo "DB_CONTAINER=$DB_CONTAINER" >> $envTestPath
        # echo "PORT_LOCAL=$PORT_LOCAL" >> $envTestPath
        # echo "PORT_CONTAINER=$PORT_CONTAINER" >> $envTestPath

        # cat $envTestPath
        # echo "-----------------------------------------------------------------------------------------------------------"
        # echo "-----------------------------------------------------------------------------------------------------------"

        # echo "REACT_APP_API_URL=$REACT_APP_API_URL" > $envWebPath 
        
        # cat $envWebPath
        # echo "-----------------------------------------------------------------------------------------------------------"
        # echo "-----------------------------------------------------------------------------------------------------------"

        # echo "ROOT_PASSWORD=$PASSWORD_CONTAINER" > $envDockerCompose
        # echo "DATABASE=$DB_CONTAINER" >> $envDockerCompose
        # echo "USER=$USER_CONTAINER" >> $envDockerCompose
        # echo "PORT=$PORT_CONTAINER" >> $envDockerCompose
        
        # cat $envDockerCompose
        # echo "-----------------------------------------------------------------------------------------------------------"
        # echo "-----------------------------------------------------------------------------------------------------------"

    - name: Show file system
      run: |
        find .
        

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build Docker stack
      run: |
        docker-compose build --no-cache
        docker-compose up -d
    
    - name: Wait for 10 minutes while the database is setting up
      run: sleep 600

    - name: Install Google Chrome
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt-get install -y -f
        sudo apt-get install -y libxss1 libappindicator1 libindicator7

    - name: Show mysql logs
      run: |
        docker logs mspr-bdd-b3_mysql-db-compose_1
    - name: Show python logs
      run: |
        docker logs mspr-bdd-b3_python-api-compose_1
    - name: Show react logs
      run: |
        docker logs mspr-bdd-b3_react-web-compose_1

    - name: Run Selenium tests
      run: |
        cd ./MSPR-BDD-B3-Tests
        # Install dependencies for your test project, e.g. Python and pip for Python projects
        sudo apt-get install -y python3 python3-pip
        # Install Selenium and other required packages
        pip install -r ./requirements.txt
        # Run your Selenium tests
        python3 -m pytest ./test_testUserRegister.py

    - name: Stop Docker Compose stack
      if: always()
      run: docker-compose down  --remove-orphans --volumes
